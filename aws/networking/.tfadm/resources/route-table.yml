extends: .vpc/tags-all
parent: vpc
description: >-
  A route table contains a set of rules, called routes.
path: route_table_name
source: route-tables/{route_table_name}/route-table.tf.json
address: resource/aws_route_table/this
properties:
  vpc_id:
    expr: '"data.aws_vpc.this.id"'
    ignore: null
  VpcId:
    sync: null
  route_table_name:
    default: main
    description: The name of the route table.
    sync: Tags/Name
    use: tags/Name
  route_table_id_:
    format: rtb-{}
    hash: md5
    ignore: true
    inherit: true
    required: true
    sync: false
    value: '{route_table_name}.{vpc_id_}'
    when: route_table_name is defined and vpc_id_ is defined
  route_table_id:
    computed: '{}'
    ignore: true
    inherit: true
    sync: false
    value: aws_route_table.this.id
  RouteTableId:
    description: The ID of the route table you want to sync with.
    ignore: true
    inherit: true
  Main:
    ignore: true
methods:
  sync:
    describe:
      - .tfadm/bin/describe-route-tables.sh {profile} {region} Name=route-table-id,Values={RouteTableId}
      - .tfadm/bin/describe-route-tables.sh {profile} {region} Name=vpc-id,Values={VpcId} Name=tag:Name,Values={route_table_name}
      - .tfadm/bin/describe-route-tables.sh {profile} {region} Name=vpc-id,Values={VpcId}
    when: route_table_name | default(None) is not none
  terraform:
    import:
      id: '{RouteTableId}'
events:
  oninit:
    create:
      .route-table/providers: {}
      .route-table/versions: {}
      .route-table/vpc: {}
module:
  file: .tfadm/var/lib/route-tables.json
  name: '{route_table_id_}'
